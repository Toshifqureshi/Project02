<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-10-10T16:15:19Z" name="Suite" finished-at="2023-10-10T16:15:38Z" duration-ms="18550">
    <groups>
      <group name="RegressionSuite">
        <method signature="MyPractiseTest.getSystemDateInFormat()[pri:0, instance:com.PractiseExcersise.MyPractiseTest@3e6104fc]" name="getSystemDateInFormat" class="com.PractiseExcersise.MyPractiseTest"/>
      </group> <!-- RegressionSuite -->
      <group name="SmokeSuite">
        <method signature="MyPractiseTest.date1()[pri:0, instance:com.PractiseExcersise.MyPractiseTest@3e6104fc]" name="date1" class="com.PractiseExcersise.MyPractiseTest"/>
        <method signature="OrganizationTest.organizationPage1()[pri:0, instance:com.organization.OrganizationTest@6239aba6]" name="organizationPage1" class="com.organization.OrganizationTest"/>
      </group> <!-- SmokeSuite -->
    </groups>
    <test started-at="2023-10-10T16:15:19Z" name="Test" finished-at="2023-10-10T16:15:38Z" duration-ms="18550">
      <class name="com.organization.OrganizationTest">
        <test-method is-config="true" signature="bsConfig()[pri:0, instance:com.organization.OrganizationTest@6239aba6]" started-at="2023-10-10T16:15:19Z" name="bsConfig" finished-at="2023-10-10T16:15:19Z" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bsConfig -->
        <test-method is-config="true" signature="bcConfig()[pri:0, instance:com.organization.OrganizationTest@6239aba6]" started-at="2023-10-10T16:15:19Z" name="bcConfig" finished-at="2023-10-10T16:15:23Z" duration-ms="3932" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bcConfig -->
        <test-method is-config="true" signature="bmConfig()[pri:0, instance:com.organization.OrganizationTest@6239aba6]" started-at="2023-10-10T16:15:23Z" name="bmConfig" finished-at="2023-10-10T16:15:26Z" duration-ms="2413" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bmConfig -->
        <test-method signature="organizationPage1()[pri:0, instance:com.organization.OrganizationTest@6239aba6]" started-at="2023-10-10T16:15:26Z" name="organizationPage1" finished-at="2023-10-10T16:15:35Z" duration-ms="9181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- organizationPage1 -->
        <test-method is-config="true" signature="amConfig()[pri:0, instance:com.organization.OrganizationTest@6239aba6]" started-at="2023-10-10T16:15:35Z" name="amConfig" finished-at="2023-10-10T16:15:36Z" duration-ms="1519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- amConfig -->
        <test-method is-config="true" signature="acConfig()[pri:0, instance:com.organization.OrganizationTest@6239aba6]" started-at="2023-10-10T16:15:36Z" name="acConfig" finished-at="2023-10-10T16:15:38Z" duration-ms="1217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- acConfig -->
        <test-method is-config="true" signature="asConfig()[pri:0, instance:com.organization.OrganizationTest@6239aba6]" started-at="2023-10-10T16:15:38Z" name="asConfig" finished-at="2023-10-10T16:15:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asConfig -->
      </class> <!-- com.organization.OrganizationTest -->
      <class name="com.PractiseExcersise.MyPractiseTest">
        <test-method signature="dataProvider(java.lang.String, int)[pri:0, instance:com.PractiseExcersise.MyPractiseTest@3e6104fc]" started-at="2023-10-10T16:15:38Z" name="dataProvider" data-provider="getData" finished-at="2023-10-10T16:15:38Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[apple]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dataProvider -->
        <test-method signature="dataProvider(java.lang.String, int)[pri:0, instance:com.PractiseExcersise.MyPractiseTest@3e6104fc]" started-at="2023-10-10T16:15:38Z" name="dataProvider" data-provider="getData" finished-at="2023-10-10T16:15:38Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[samsung]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dataProvider -->
        <test-method signature="dataProvider(java.lang.String, int)[pri:0, instance:com.PractiseExcersise.MyPractiseTest@3e6104fc]" started-at="2023-10-10T16:15:38Z" name="dataProvider" data-provider="getData" finished-at="2023-10-10T16:15:38Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[htc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dataProvider -->
        <test-method signature="excelWrite()[pri:0, instance:com.PractiseExcersise.MyPractiseTest@3e6104fc]" started-at="2023-10-10T16:15:38Z" name="excelWrite" finished-at="2023-10-10T16:15:38Z" duration-ms="63" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The workbook already contains a sheet named 'Toshif']]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The workbook already contains a sheet named 'Toshif'
at org.apache.poi.xssf.usermodel.XSSFWorkbook.validateSheetName(XSSFWorkbook.java:914)
at org.apache.poi.xssf.usermodel.XSSFWorkbook.createSheet(XSSFWorkbook.java:867)
at org.apache.poi.xssf.usermodel.XSSFWorkbook.createSheet(XSSFWorkbook.java:123)
at com.PractiseExcersise.MyPractiseTest.excelWrite(MyPractiseTest.java:65)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- excelWrite -->
        <test-method signature="date1()[pri:0, instance:com.PractiseExcersise.MyPractiseTest@3e6104fc]" started-at="2023-10-10T16:15:38Z" name="date1" finished-at="2023-10-10T16:15:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- date1 -->
        <test-method signature="excelread()[pri:0, instance:com.PractiseExcersise.MyPractiseTest@3e6104fc]" started-at="2023-10-10T16:15:38Z" name="excelread" finished-at="2023-10-10T16:15:38Z" duration-ms="203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- excelread -->
        <test-method signature="getSystemDateInFormat()[pri:0, instance:com.PractiseExcersise.MyPractiseTest@3e6104fc]" started-at="2023-10-10T16:15:38Z" name="getSystemDateInFormat" finished-at="2023-10-10T16:15:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSystemDateInFormat -->
        <test-method signature="random()[pri:0, instance:com.PractiseExcersise.MyPractiseTest@3e6104fc]" started-at="2023-10-10T16:15:38Z" name="random" finished-at="2023-10-10T16:15:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- random -->
        <test-method signature="propertyfile()[pri:0, instance:com.PractiseExcersise.MyPractiseTest@3e6104fc]" started-at="2023-10-10T16:15:38Z" name="propertyfile" finished-at="2023-10-10T16:15:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- propertyfile -->
      </class> <!-- com.PractiseExcersise.MyPractiseTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
